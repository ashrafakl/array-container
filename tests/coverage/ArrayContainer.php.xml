<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ArrayContainer.php" path="/">
    <totals>
      <lines total="326" comments="117" code="209" executable="56" executed="56" percent="100.00"/>
      <methods count="27" tested="27" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="ashrafakl\tools\arrays\ArrayContainer" start="10" executable="56" executed="56" crap="36">
      <package full="" name="" sub="" category=""/>
      <namespace name="ashrafakl\tools\arrays"/>
      <method name="__construct" signature="__construct(array $list)" start="19" end="22" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="map" signature="map(callable $callable): ArrayContainer" start="31" end="35" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="filter" signature="filter(callable $callable, bool $reindex = false): ArrayContainer" start="47" end="54" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="values" signature="values()" start="60" end="63" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="pop" signature="pop()" start="70" end="73" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="push" signature="push(...$elements): ArrayContainer" start="81" end="90" crap="2" executable="6" executed="6" coverage="100"/>
      <method name="shift" signature="shift()" start="97" end="100" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="unshift" signature="unshift(...$elements): ArrayContainer" start="108" end="117" crap="2" executable="6" executed="6" coverage="100"/>
      <method name="keys" signature="keys(): array" start="123" end="126" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="reduce" signature="reduce(callable $callable, $initial = null)" start="136" end="139" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="product" signature="product()" start="145" end="148" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="sum" signature="sum()" start="155" end="158" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="reverse" signature="reverse(bool $preserveKeys = false): ArrayContainer" start="165" end="169" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="chunk" signature="chunk(int $length, bool $preserveKeys = false): array" start="177" end="180" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="order" signature="order(callable $callable): ArrayContainer" start="187" end="191" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="printR" signature="printR(bool $return = false)" start="198" end="201" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="__toString" signature="__toString(): string" start="207" end="210" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="clone" signature="clone(): ArrayContainer" start="216" end="219" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="count" signature="count(): int" start="226" end="229" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="forEach" signature="forEach(callable $callable): void" start="237" end="245" crap="4" executable="5" executed="5" coverage="100"/>
      <method name="forEachGenerator" signature="forEachGenerator(): Generator" start="251" end="259" crap="3" executable="5" executed="5" coverage="100"/>
      <method name="getList" signature="getList(): array" start="266" end="269" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getGenerator" signature="getGenerator(): Generator" start="275" end="278" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="offsetExists" signature="offsetExists($offset)" start="286" end="289" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="offsetGet" signature="offsetGet($offset)" start="297" end="300" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="offsetSet" signature="offsetSet($offset, $value)" start="308" end="315" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="offsetUnset" signature="offsetUnset($offset)" start="322" end="325" crap="1" executable="2" executed="2" coverage="100"/>
    </class>
    <coverage>
      <line nr="21">
        <covered by="ArrayContainerTest::testOne"/>
        <covered by="ArrayContainerTest::testTwo"/>
        <covered by="ArrayContainerTest::testThree"/>
        <covered by="ArrayContainerTest::testFour"/>
        <covered by="ArrayContainerTest::testFive"/>
      </line>
      <line nr="22">
        <covered by="ArrayContainerTest::testOne"/>
        <covered by="ArrayContainerTest::testTwo"/>
        <covered by="ArrayContainerTest::testThree"/>
        <covered by="ArrayContainerTest::testFour"/>
        <covered by="ArrayContainerTest::testFive"/>
      </line>
      <line nr="33">
        <covered by="ArrayContainerTest::testTwo"/>
      </line>
      <line nr="34">
        <covered by="ArrayContainerTest::testTwo"/>
      </line>
      <line nr="49">
        <covered by="ArrayContainerTest::testTwo"/>
      </line>
      <line nr="50">
        <covered by="ArrayContainerTest::testTwo"/>
      </line>
      <line nr="51">
        <covered by="ArrayContainerTest::testTwo"/>
      </line>
      <line nr="53">
        <covered by="ArrayContainerTest::testTwo"/>
      </line>
      <line nr="62">
        <covered by="ArrayContainerTest::testTwo"/>
      </line>
      <line nr="72">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="83">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="84">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="85">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="86">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="88">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="89">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="99">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="110">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="111">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="112">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="113">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="115">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="116">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="125">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="138">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="147">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="157">
        <covered by="ArrayContainerTest::testOne"/>
      </line>
      <line nr="167">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="168">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="179">
        <covered by="ArrayContainerTest::testFive"/>
      </line>
      <line nr="189">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="190">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="200">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="209">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="218">
        <covered by="ArrayContainerTest::testTwo"/>
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="228">
        <covered by="ArrayContainerTest::testOne"/>
        <covered by="ArrayContainerTest::testFour"/>
      </line>
      <line nr="239">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="240">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="241">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="242">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="245">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="253">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="254">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="255">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="256">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="259">
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="268">
        <covered by="ArrayContainerTest::testTwo"/>
        <covered by="ArrayContainerTest::testThree"/>
      </line>
      <line nr="277">
        <covered by="ArrayContainerTest::testFive"/>
      </line>
      <line nr="288">
        <covered by="ArrayContainerTest::testFour"/>
      </line>
      <line nr="299">
        <covered by="ArrayContainerTest::testOne"/>
        <covered by="ArrayContainerTest::testFour"/>
      </line>
      <line nr="310">
        <covered by="ArrayContainerTest::testFour"/>
      </line>
      <line nr="311">
        <covered by="ArrayContainerTest::testFour"/>
      </line>
      <line nr="313">
        <covered by="ArrayContainerTest::testFour"/>
      </line>
      <line nr="315">
        <covered by="ArrayContainerTest::testFour"/>
      </line>
      <line nr="324">
        <covered by="ArrayContainerTest::testFour"/>
      </line>
      <line nr="325">
        <covered by="ArrayContainerTest::testFour"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ashrafakl</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">tools</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">arrays</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayAccess</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Generator</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayContainer</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayAccess</token>
      </line>
      <line no="11">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$list</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">GENERATOR_SEND_STOP</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">     * ArrayContainer constructor.</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     * @param array $list array elements</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$list</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$list</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="23"/>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     * Tested</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     * Applies the callback to the elements of the [[list]] array</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     * @param callable $callable function to run for each element in [[list]] array.</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     * @return $this ArrayContainer object or array containing all the elements of [[list]]</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT">     * after applying the callback function for each element.</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">map</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callable</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayContainer</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_map</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$callable</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     * Tested</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     * Applies the callback to the elements of the [[list]] array</token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT">     * If the callback function returns true, the current value in [[list]] array is returned into the result array</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT">     * Iterates over each value in the [[list]] array</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     * @param callable $callable</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     * @param bool $reindex When true reindex the [[list]] array from zero.</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT">     * @return $this ArrayContainer object or array containing all the elements of [[list]]</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     * after applying the callback function for each element.</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callable</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$reindex</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayContainer</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callable</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$reindex</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">values</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="55"/>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="57">
        <token name="T_DOC_COMMENT">     * Return all the values of [[list]] array</token>
      </line>
      <line no="58">
        <token name="T_DOC_COMMENT">     * @return mixed</token>
      </line>
      <line no="59">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">values</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_values</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64"/>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="66">
        <token name="T_DOC_COMMENT">     * Tested</token>
      </line>
      <line no="67">
        <token name="T_DOC_COMMENT">     * Pop the element off the end of [[list]] array</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">     * @return mixed</token>
      </line>
      <line no="69">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">pop</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_pop</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="74"/>
      <line no="75">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="76">
        <token name="T_DOC_COMMENT">     * Tested</token>
      </line>
      <line no="77">
        <token name="T_DOC_COMMENT">     * Push elements onto the end of the [[list]] array</token>
      </line>
      <line no="78">
        <token name="T_DOC_COMMENT">     * @param mixed ...$elements The pushed variables</token>
      </line>
      <line no="79">
        <token name="T_DOC_COMMENT">     * @return  ArrayContainer object</token>
      </line>
      <line no="80">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">push</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ELLIPSIS">...</token>
        <token name="T_VARIABLE">$elements</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayContainer</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$itemsCount</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$elements</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$itemsCount</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$elements</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$elements</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="91"/>
      <line no="92">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="93">
        <token name="T_DOC_COMMENT">     * Tested</token>
      </line>
      <line no="94">
        <token name="T_DOC_COMMENT">     * Shift an element off the beginning of the [[list]] array</token>
      </line>
      <line no="95">
        <token name="T_DOC_COMMENT">     * @return mixed</token>
      </line>
      <line no="96">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">shift</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_shift</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="101"/>
      <line no="102">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="103">
        <token name="T_DOC_COMMENT">     * Tested</token>
      </line>
      <line no="104">
        <token name="T_DOC_COMMENT">     * Prepend one or more elements to the beginning of the [[list]] array</token>
      </line>
      <line no="105">
        <token name="T_DOC_COMMENT">     * @param mixed ...$elements The values to prepend</token>
      </line>
      <line no="106">
        <token name="T_DOC_COMMENT">     * @return  ArrayContainer object</token>
      </line>
      <line no="107">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">unshift</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ELLIPSIS">...</token>
        <token name="T_VARIABLE">$elements</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayContainer</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$itemsCount</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$elements</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$itemsCount</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">array_unshift</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$elements</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$elements</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="118"/>
      <line no="119">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="120">
        <token name="T_DOC_COMMENT">     * Return all the keys of the [[list]] array</token>
      </line>
      <line no="121">
        <token name="T_DOC_COMMENT">     * @return array an array of all the keys in the [[list]] array.</token>
      </line>
      <line no="122">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">keys</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_keys</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="127"/>
      <line no="128">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="129">
        <token name="T_DOC_COMMENT">     * Iteratively reduce the [[list]] array to a single value using a callback function</token>
      </line>
      <line no="130">
        <token name="T_DOC_COMMENT">     * @param callable $callable The callback function.</token>
      </line>
      <line no="131">
        <token name="T_DOC_COMMENT">     * @param mixed|null $initial If the optional initial is available, it will</token>
      </line>
      <line no="132">
        <token name="T_DOC_COMMENT">     * be used at the beginning of the process, or as a final result in case</token>
      </line>
      <line no="133">
        <token name="T_DOC_COMMENT">     * the array is empty.</token>
      </line>
      <line no="134">
        <token name="T_DOC_COMMENT">     * @return mixed|null the resulting value.</token>
      </line>
      <line no="135">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">reduce</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callable</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$initial</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_reduce</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callable</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$initial</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="140"/>
      <line no="141">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="142">
        <token name="T_DOC_COMMENT">     * Calculate the product of values in the [[list]] array</token>
      </line>
      <line no="143">
        <token name="T_DOC_COMMENT">     * @return mixed the resulting value.</token>
      </line>
      <line no="144">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">product</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_product</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="149"/>
      <line no="150">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="151">
        <token name="T_DOC_COMMENT">     * Tested</token>
      </line>
      <line no="152">
        <token name="T_DOC_COMMENT">     * Calculate the sum of values in the [[list]] array</token>
      </line>
      <line no="153">
        <token name="T_DOC_COMMENT">     * @return int|float the resulting value.</token>
      </line>
      <line no="154">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sum</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_sum</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="159"/>
      <line no="160">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="161">
        <token name="T_DOC_COMMENT">     * Revers the[[list]] array elements</token>
      </line>
      <line no="162">
        <token name="T_DOC_COMMENT">     * @param bool $preserveKeys If set to true numeric keys are preserved</token>
      </line>
      <line no="163">
        <token name="T_DOC_COMMENT">     * @return $this</token>
      </line>
      <line no="164">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">reverse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$preserveKeys</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayContainer</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_reverse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$preserveKeys</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="170"/>
      <line no="171">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="172">
        <token name="T_DOC_COMMENT">     * Split the[[list]] array into chunks</token>
      </line>
      <line no="173">
        <token name="T_DOC_COMMENT">     * @param int $length The size of each chunk</token>
      </line>
      <line no="174">
        <token name="T_DOC_COMMENT">     * @param bool $preserveKeys When set to true keys will be preserved.</token>
      </line>
      <line no="175">
        <token name="T_DOC_COMMENT">     * @return array a multidimensional numerically indexed array, starting with zero, with each dimension containing</token>
      </line>
      <line no="176">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">chunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$length</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$preserveKeys</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_chunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$length</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$preserveKeys</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="181"/>
      <line no="182">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="183">
        <token name="T_DOC_COMMENT">     *  Sort the [[list]] array</token>
      </line>
      <line no="184">
        <token name="T_DOC_COMMENT">     * @param callable|null $callable The callback function used to sort [[list]] array</token>
      </line>
      <line no="185">
        <token name="T_DOC_COMMENT">     * @return $this</token>
      </line>
      <line no="186">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">order</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callable</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayContainer</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callable</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="192"/>
      <line no="193">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="194">
        <token name="T_DOC_COMMENT">     * Prints human-readable information about [[list]] array</token>
      </line>
      <line no="195">
        <token name="T_DOC_COMMENT">     * @param bool $return true to capture the output of [[list]] array</token>
      </line>
      <line no="196">
        <token name="T_DOC_COMMENT">     * @return true|string see php print_r function</token>
      </line>
      <line no="197">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">printR</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">print_r</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$return</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="202"/>
      <line no="203">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="204">
        <token name="T_DOC_COMMENT">     * Return human-readable information about [[list]] array</token>
      </line>
      <line no="205">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="206">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__toString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">printR</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="211"/>
      <line no="212">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="213">
        <token name="T_DOC_COMMENT">     * Clone the ArrayContainer object to a new object</token>
      </line>
      <line no="214">
        <token name="T_DOC_COMMENT">     * @return ArrayContainer</token>
      </line>
      <line no="215">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLONE">clone</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayContainer</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLONE">clone</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="220"/>
      <line no="221">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="222">
        <token name="T_DOC_COMMENT">     * Tested</token>
      </line>
      <line no="223">
        <token name="T_DOC_COMMENT">     * Count the [[list]] array elements</token>
      </line>
      <line no="224">
        <token name="T_DOC_COMMENT">     * @return int</token>
      </line>
      <line no="225">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="230"/>
      <line no="231">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="232">
        <token name="T_DOC_COMMENT">     * Iterates over each value in the [[list]] array</token>
      </line>
      <line no="233">
        <token name="T_DOC_COMMENT">     * passing them to the callback function.</token>
      </line>
      <line no="234">
        <token name="T_DOC_COMMENT">     * If the callback function returns true, the iteration will be stopped</token>
      </line>
      <line no="235">
        <token name="T_DOC_COMMENT">     * @param callable $callable The callback function to use</token>
      </line>
      <line no="236">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FOREACH">forEach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callable</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="239">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$generator</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">forEachGenerator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="240">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$generator</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="241">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$callable</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$generator</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">send</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">GENERATOR_SEND_STOP</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="246"/>
      <line no="247">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="248">
        <token name="T_DOC_COMMENT">     * Foreach generator method</token>
      </line>
      <line no="249">
        <token name="T_DOC_COMMENT">     * @return Generator</token>
      </line>
      <line no="250">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">forEachGenerator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Generator</token>
      </line>
      <line no="252">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="253">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$injected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_YIELD">yield</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="255">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$injected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">GENERATOR_SEND_STOP</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="256">
        <token name="T_WHITESPACE">                </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="257">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="258">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="259">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="260"/>
      <line no="261">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="262">
        <token name="T_DOC_COMMENT">     * Tested</token>
      </line>
      <line no="263">
        <token name="T_DOC_COMMENT">     * Get the [[list]] array</token>
      </line>
      <line no="264">
        <token name="T_DOC_COMMENT">     * @return array</token>
      </line>
      <line no="265">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="266">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getList</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="267">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="268">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="269">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="270"/>
      <line no="271">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="272">
        <token name="T_DOC_COMMENT">     * Get the generator used in [[forEach]] method</token>
      </line>
      <line no="273">
        <token name="T_DOC_COMMENT">     * @return Generator</token>
      </line>
      <line no="274">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="275">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getGenerator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Generator</token>
      </line>
      <line no="276">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="277">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">forEachGenerator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="278">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="279"/>
      <line no="280">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="281">
        <token name="T_DOC_COMMENT">     * @see PHP ArrayAccess</token>
      </line>
      <line no="282">
        <token name="T_DOC_COMMENT">     * @link https://php.net/manual/en/class.arrayaccess.php</token>
      </line>
      <line no="283">
        <token name="T_DOC_COMMENT">     * @param mixed $offset</token>
      </line>
      <line no="284">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="285">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="286">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">offsetExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="287">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="288">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="289">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="290"/>
      <line no="291">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="292">
        <token name="T_DOC_COMMENT">     * @see PHP ArrayAccess</token>
      </line>
      <line no="293">
        <token name="T_DOC_COMMENT">     * @link https://php.net/manual/en/class.arrayaccess.php</token>
      </line>
      <line no="294">
        <token name="T_DOC_COMMENT">     * @param mixed $offset</token>
      </line>
      <line no="295">
        <token name="T_DOC_COMMENT">     * @return mixed|null</token>
      </line>
      <line no="296">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="297">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">offsetGet</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="298">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="299">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="300">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="301"/>
      <line no="302">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="303">
        <token name="T_DOC_COMMENT">     * @see PHP ArrayAccess</token>
      </line>
      <line no="304">
        <token name="T_DOC_COMMENT">     * @link https://php.net/manual/en/class.arrayaccess.php</token>
      </line>
      <line no="305">
        <token name="T_DOC_COMMENT">     * @param mixed $offset</token>
      </line>
      <line no="306">
        <token name="T_DOC_COMMENT">     * @param mixed $value</token>
      </line>
      <line no="307">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="308">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">offsetSet</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="309">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="310">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="311">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="312">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="313">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="314">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="315">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="316"/>
      <line no="317">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="318">
        <token name="T_DOC_COMMENT">     * @see PHP ArrayAccess</token>
      </line>
      <line no="319">
        <token name="T_DOC_COMMENT">     * @link https://php.net/manual/en/class.arrayaccess.php</token>
      </line>
      <line no="320">
        <token name="T_DOC_COMMENT">     * @param mixed $offset</token>
      </line>
      <line no="321">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="322">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">offsetUnset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="323">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="324">
        <token name="T_WHITESPACE">        </token>
        <token name="T_UNSET">unset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="325">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="326">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="327"/>
    </source>
  </file>
</phpunit>
